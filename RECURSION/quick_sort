//quick sort main ek element uthao aur usko uski right position pe place kardo
#include<iostream>
using namespace std;

int partition(int arr[],int s,int e){
    //first element jo uthaya
    int pivot=arr[s];
    int count=0;
    for(int i=s+1;i<=e;i++){
        if(arr[i]<=pivot){
            count++;
        }
    }
    int pivotIndex=s+count;//right index/place of pivot element
    swap(arr[pivotIndex],arr[s]);//placing pivot at correct position

    //left aur right vala part i.e left main sare elements less than pivot and right main > than pivot
    int i=s,j=e;
    while(i<pivotIndex && j>pivotIndex){
        while(arr[i]<pivot){
            i++;
        }
        while(arr[j]>pivot){
            j--;
        }
        if(i<pivotIndex && j>pivotIndex){
            swap(arr[i++],arr[j--]);
        }
    }
    return pivotIndex;

}

void quick_sort(int* arr,int s,int e){
    //base case
    if(s>=e){
        return ;
    }
    //partitioning 
    int p=partition(arr,s,e);

    //left part sorting
    quick_sort(arr,s,p-1);

    //right part sorting
    quick_sort(arr,p+1,e);


}
int main(){
    int arr[7]={9,5,4,3,2,1,6};
    int n=7;
    quick_sort(arr,0,n-1);
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
}
